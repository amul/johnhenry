namespace :john_henry do
  desc 'Install dependencies and references.'
  task :install do
    Rails.logger = Logger.new(STDOUT)

    quit_if_already_installed
    install_layout
    maybe_remove_old_layout
    update_gemfile
    update_routes
    install_user_model
    install_javascript
    install_stylesheets
    install_stripe
    install_sendgrid
    install_email_preview

    success_message
  end

  def quit_if_already_installed
    token = 'BEGIN autogenerated by JohnHenryRails'.freeze
    if File.read(File.join(Rails.root, *%w(Gemfile))).include?(token)
      message = "JohnHenry has already been installed."
      Rails.logger.error message
      fail message
    end
  end

  def johnhenry_root
    @_johnhenry_root ||= Gem.loaded_specs['johnhenry'].full_gem_path.freeze
  end

  def install_layout
    source = File.join(johnhenry_root, *%w(app views layouts johnhenry application.html.haml))
    target = File.join(Rails.root, *%w(app views layouts application.html.haml))

    Rails.logger.info "Copying application.html.haml..."
    FileUtils.cp(source, target)
  end

  def maybe_remove_old_layout
    layout_erb = File.join(Rails.root, *%w(app views layouts application.html.erb))
    if File.exists?(layout_erb)
      Rails.logger.info "Removing application.html.erb..."
      FileUtils.rm(layout_erb)
    end
  end

  def create_file(blob_array, contents)
    target = File.join(Rails.root, *blob_array)
    Rails.logger.info "Creating #{ target }..."
    File.open(target, 'w') { |f| f.write(contents) }
  end

  def insert_into_file_after(blob_array, line_no, lines)
    target = File.join(Rails.root, *blob_array)
    file_contents = File.readlines(target)
    prepend = file_contents[0..(line_no-1)]
    append = file_contents[line_no..-1]
    contents = (prepend + lines + append)
    Rails.logger.info "Inserting into #{ target } at line #{ line_no }..."
    File.open(target, 'w') { |f| f.write contents.join }
  end

  def update_gemfile
    source = File.join(johnhenry_root, *%w(lib Gemfile))
    target = File.join(Rails.root, *%w(Gemfile))

    Rails.logger.info "Removing sqlite3 and turbolinks from Gemfile..."
    gemfile_lines = File.readlines(target).reject do |line|
      line =~ /(sqlite3|turbolinks)/
    end
    File.open(target, 'w') { |f| f.write(gemfile_lines.join) }

    insert_into_file_after(%w(Gemfile), 5, File.readlines(source))
  end

  def install_user_model
    code = "class User < JohnHenryUser\nend\n"
    create_file(%w(app models user.rb), code)
  end

  def install_javascript
    code = ["//= require johnhenry/application\n"]
    insert_into_file_after(%w(app assets javascripts application.js), 12, code)
  end

  def install_stylesheets
    code = [" *= require johnhenry/application\n"]
    insert_into_file_after(%w(app assets stylesheets application.css), 10, code)
  end

  def install_stripe
    code = <<-EOS
Stripe.api_key = ENV['STRIPE_SECRET_KEY']
STRIPE_PUBLISHABLE_KEY = ENV['STRIPE_PUBLISHABLE_KEY']
EOS
    create_file(%w(config initializers stripe.rb), code)
  end

  def install_sendgrid
    code = <<-EOS
ActionMailer::Base.smtp_settings = {
  :address        => 'smtp.sendgrid.net',
  :port           => '587',
  :authentication => :plain,
  :user_name      => ENV['SENDGRID_USERNAME'],
  :password       => ENV['SENDGRID_PASSWORD'],
  :domain         => 'heroku.com',
  :enable_starttls_auto => true
}
EOS
    target = File.join(Rails.root, *%w(config environment.rb))
    Rails.logger.info "Creating config/environment.rb..."
    File.open(target, 'a+') { |f| f.write(code) }

    code = ["  config.action_mailer.default_url_options = { host: 'localhost:3000' }"]
    insert_into_file_after(%w(config environments development.rb), 26, code)

    code = ["  config.action_mailer.default_url_options = { host: 'www.johnhenryrails.com' }"]
    insert_into_file_after(%w(config environments production.rb), 39, code)
  end

  def install_email_preview
    code = <<-EOS
if Rails.env.development?
  EmailPreview.register 'Signup' do
    user = JohnHenryUser.new email: 'johnny.cage@gmail.com'
    JohnHenryMailer.signup(user)
  end
end
EOS
    create_file(%w(config initializers email_preview.rb), code)
  end


  def update_routes
    code = <<-EOS
  root 'johnhenry/home#welcome'
  devise_for :users, controllers: {
      registrations: 'johnhenry/registrations',
        sessions: 'johnhenry/sessions'
  }
  resources :payments, controller: 'johnhenry/payments'
EOS
    insert_into_file_after(%w(config routes.rb), 1, [code])
  end

  def success_message
    git_command = %w().join(' ')

    Rails.logger.info <<-EOS

      Installation complete! If you're using git, you should:

        git add app config Gemfile*
        git rm app/views/layouts/application.html.erb

      You can check out the demo page:
        bundle exec rails server

      and loading in your browser:
        http://localhost:3000
    EOS
  end
end
